openapi: 3.1.0
info:
  title: API of service WEB3.WITH
  description: Operations of service
  version: 1.0.0
servers:
#  - url: /main
paths:
  /vacancies:
    post:
      summary: Get a list of vacancies
      operationId: getVacancies
      tags:
        - Vacancies
      parameters:
        - in: header
          name: Content-Type
          required: false
          schema:
            type: string
            enum:
              - application/json
          default: application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacancyRq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacanciesRs'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithAppExceptionDTO'
  /vacancy/{id}:
    get:
      summary: Получение вакансии по ID
      description: Возвращает информацию о вакансии по указанному ID.
      operationId: getVacancyById
      tags:
        - Vacancies
      parameters:
        - name: id
          in: path
          description: ID вакансии для получения информации
          required: true
          schema:
            type: integer
            format: int64
            example: 123
      responses:
        '200':
          description: Вакансия успешно найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacancyDTO'
        '404':
          description: Вакансия не найдена

  /employer/{id}:
    get:
      summary: Get an employer by ID
      description: Returns detailed information about an employer.
      operationId: getEmployerById
      tags:
        - Employer
      parameters:
        - name: id
          in: path
          description: ID of the employer to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Employer data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerDTO'
        '404':
          description: Employer not found

  /vacancy/employer/{id}:
    get:
      summary: Get employer and its vacancies by employer ID
      description: Returns detailed information about an employer and its associated vacancies.
      operationId: getEmployerWithVacanciesById
      tags:
        - Employer
      parameters:
        - name: id
          in: path
          description: ID of the employer to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Employer and vacancies data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerWithVacancyRs'
        '404':
          description: Employer not found

components:
  schemas:
    VacancyRq:
      type: object
      properties:
        page:
          type: integer
          format: int32
#        size:
#          type: integer
#          format: int64

    VacanciesRs:
      type: object
      properties:
        vacancies:
          type: array
          description: Array of vacancies
          items:
            $ref: '#/components/schemas/VacancyPreviewDTO'
        isLastPage:
          type: boolean

    VacancyDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        location:
          type: string
        workMode:
          type: string
          description: Format of work
          example: "Remote"
        salary:
          type: integer
        companyName:
          type: string
        tags:
          type: array
          description: Array of tags
          items:
            type: string
#            $ref: '#/components/schemas/TagDTO'

    VacancyPreviewDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        salary:
          type: integer
        companyName:
          type: string
        tags:
          type: array
          description: Array of tags
          items:
            type: string
#            $ref: '#/components/schemas/TagDTO'

#    TagDTO:
#      type: object
#      properties:
#        name:
#          type: string

    WithAppExceptionDTO:
      type: object
      properties:
        code:
          type: integer
          description: Error code
          example: 1
        message:
          type: string
          description: Error message
          example: "Error while validating"

    EmployerDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the employer
        companyName:
          type: string
          description: Name of the company
        website:
          type: string
          description: Website URL of the company
        description:
          type: string
          description: Brief description of the company
        location:
          type: string
          description: Location of the company
        email:
          type: string
          description: Contact email of the company

    EmployerWithVacancyRs:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the employer
        companyName:
          type: string
          description: Name of the company
        vacancies:
          type: array
          description: List of vacancies offered by the employer
          items:
            $ref: '#/components/schemas/VacancyPreviewDTO'