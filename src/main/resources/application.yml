server:
  servlet:
    context-path: /api/v1/

spring:
  application:
    name: with
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: <GOOGLE_CLIENT_ID>
            clientSecret: <GOOGLE_CLIENT_SECRET>
            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          github:
            clientId: <GITHUB_CLIENT_ID>
            clientSecret: <GITHUB_CLIENT_SECRET>
            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user

  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/postgres}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWD:postgrespw}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    show-sql: true

vacancy:
  pageSize: 25

management:
  endpoint:
    loggers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: 'prometheus, health, loggers'
  prometheus:
    metrics:
      export:
        enabled: true

logging:
  level:
    root: INFO

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

app:
  auth:
    tokenSecret: QNsgkaQlOLZcgaQL0IX5XHK84M+g7V2sDlVZDdAeR4s=
    duration: 15m
  cors:
    allowedOrigins: http://localhost:3000,http://localhost:8080
  oauth2:
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect